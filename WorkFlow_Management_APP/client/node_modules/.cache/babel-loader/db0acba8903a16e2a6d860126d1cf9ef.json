{"ast":null,"code":"var _jsxFileName = \"/Users/oliverbloj/Documents/Concordia BootCamp/36.1 WM 5.5.2022/WorkFlow_Management_APP/client/src/components/CurrentProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport backgroundImage from \"../assets/background2.png\";\nimport styled from \"styled-components\";\nimport { DataContext } from \"./DataContext\";\nimport Sidebar from \"./Sidebar\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport EasyEdit, { Types } from 'react-easy-edit';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport Spinner from \"./Spinner\";\nimport { BsPatchQuestionFill } from \"react-icons/bs\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CurrentProject = () => {\n  _s();\n\n  const {\n    admin,\n    allTasks,\n    updateTaskStatus,\n    setUpdateTaskStatus\n  } = useContext(DataContext);\n  const [newProjectStatus, setNewProjectStatus] = useState(false);\n  const [projectById, setProjectById] = useState(null); // state for storing user by Id\n\n  const [tasksOfProject, setTasksOfProject] = useState(null); //state that stores the tasks associated with each project (projectById)\n  // const [responseObj, setResponseObj] = useState({});\n\n  let navigate = useNavigate();\n  const {\n    _id\n  } = useParams(); //getting the PROJECT _id from the URL\n\n  const [formData, setFormData] = useState({}); //Object state for storing form data from inputs\n  // const save = (value) => { setFormData({...formData, [name]: value})}\n  // const cancel = () => {console.log(\"Cancelled\")}\n\n  useEffect(() => {\n    // TODO: get seating data for selected flight\n    let isApiSubscribed = true; //this is used for cleanup function , to mount and unmount\n\n    if (isApiSubscribed) {\n      const getProjectByID = async () => {\n        const res = await fetch(`/projects/${_id}`, {\n          method: \"GET\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const json = await res.json();\n        const findTaksOfProject = allTasks.filter(task => json.data.tasks.find(el => task.taskID === el));\n        setProjectById(json.data);\n        setTasksOfProject(findTaksOfProject);\n      };\n\n      getProjectByID() //calling the function\n      //catching any errors if returned\n      .catch(error => console.log(\"ERROR : \", error));\n    }\n\n    return () => {\n      // cancel the subscription, unmounting\n      isApiSubscribed = false;\n    };\n  }, [updateTaskStatus]); //useEffect will also execute when selectedFlight changes\n\n  const handleUpdate = async () => {\n    const settings = {\n      method: 'PUT',\n      body: JSON.stringify(formData),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(\"/tasks\", settings).then(res => res.json()).then(response => {\n      window.alert(response.message); //set the received server response in a window alert\n\n      setUpdateTaskStatus(!updateTaskStatus); //sets the status of update to the opposite of current value\n      // setResponseObj({status: response.status, message: response.message}); // setting the received response object in a state\n    }).catch(error => console.log(\"ERROR: \", error));\n  }; //     //we want to show the returned message response from the server only for 2 seconds\n  //     const [showMessage, setShowMessage] = useState(false);\n  // useEffect(() => {\n  //   setTimeout(() =>{\n  //     // we set the state showMessage to true for 2 seconds\n  //     setShowMessage(!showMessage);\n  //   }, 2000)\n  // }, []);\n\n\n  const handleDelete = async () => {\n    const settings = {\n      method: 'DELETE',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(`/tasks/${checkedValue.taskID}`, settings).then(res => res.json()).then(response => {\n      window.alert(response.message); //set the received server response in a window alert\n\n      setUpdateTaskStatus(!updateTaskStatus); //sets the status of update to the opposite of current value\n      // setResponseObj({status: response.status, message: response.message}); // setting the received response object in a state\n    }).catch(error => console.log(\"ERROR: \", error));\n  }; //State used for checked radio button for each task before deleting\n\n\n  const [checkedValue, setCheckedValue] = useState({\n    taskID: \"\"\n  });\n\n  const handleChange = ev => {\n    setCheckedValue({\n      taskID: ev.target.value\n    });\n  }; // Drop Down Progress Menu\n\n\n  const options = [{\n    value: \"status\",\n    label: \"Work in progress\"\n  }, {\n    value: \"status\",\n    label: \"Submitted for review\"\n  }, {\n    value: \"status\",\n    label: \"Started\"\n  }];\n  const [progress, setProgress] = useState();\n\n  const progressUpdate = e => {\n    setProgress(e.label);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        newProjectStatus: newProjectStatus,\n        setNewProjectStatus: setNewProjectStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), newProjectStatus === true || admin !== null ? /*#__PURE__*/_jsxDEV(HomeWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"My Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), projectById !== null && /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginLeft: \"3%\",\n            \"color\": \"#F16436\",\n            marginTop: \"20px\"\n          },\n          children: [\" Project - \", projectById.projectName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ListWrapper, {\n          children: projectById !== null && tasksOfProject !== null ? tasksOfProject.map(task => {\n            return /*#__PURE__*/_jsxDEV(TaskWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tooltip\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    \"color\": \"#FED980\"\n                  },\n                  children: [\"Task Name: \", task.taskName, /*#__PURE__*/_jsxDEV(BsPatchQuestionFill, {\n                    size: 20,\n                    style: {\n                      position: \"absolute\",\n                      right: \"0\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 24\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 24\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tooltiptext\",\n                  style: {\n                    fontSize: \"12px\"\n                  },\n                  children: \"Click on each task value to edit and update or select the task to delete!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    \"color\": \"white\",\n                    marginRight: \"5px\"\n                  },\n                  children: \" Due Date: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 24\n                }, this), /*#__PURE__*/_jsxDEV(EasyEdit, {\n                  type: Types.DATE,\n                  value: task.dueDate,\n                  onSave: value => {\n                    setFormData({\n                      dueDate: value,\n                      taskID: task.taskID,\n                      nbrDeliverables: task.nbrDeliverables,\n                      details: task.details,\n                      comments: task.comments\n                    });\n                  },\n                  saveButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 45\n                  }, this),\n                  cancelButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTimes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    \"color\": \"white\",\n                    marginRight: \"5px\"\n                  },\n                  children: \" Number of Deliverables: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 24\n                }, this), /*#__PURE__*/_jsxDEV(EasyEdit, {\n                  type: Types.TEXT,\n                  value: task.nbrDeliverables,\n                  onSave: value => {\n                    setFormData({\n                      nbrDeliverables: value,\n                      taskID: task.taskID,\n                      status: task.status,\n                      dueDate: task.dueDate,\n                      details: task.details,\n                      comments: task.comments\n                    });\n                  },\n                  saveButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 45\n                  }, this),\n                  cancelButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTimes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    \"color\": \"white\",\n                    marginRight: \"5px\"\n                  },\n                  children: \" Task Details: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 24\n                }, this), /*#__PURE__*/_jsxDEV(EasyEdit, {\n                  type: Types.TEXT,\n                  value: task.details,\n                  onSave: value => {\n                    setFormData({\n                      details: value,\n                      taskID: task.taskID,\n                      nbrDeliverables: task.nbrDeliverables,\n                      status: task.status,\n                      dueDate: task.dueDate,\n                      comments: task.comments\n                    });\n                  },\n                  saveButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 45\n                  }, this),\n                  cancelButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTimes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    \"color\": \"white\",\n                    marginRight: \"5px\"\n                  },\n                  children: \" Comments: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 24\n                }, this), /*#__PURE__*/_jsxDEV(EasyEdit, {\n                  type: Types.TEXT,\n                  value: task.comments !== \"\" ? task.comments : \"Click to edit\",\n                  onSave: value => {\n                    setFormData({\n                      comments: value,\n                      taskID: task.taskID,\n                      nbrDeliverables: task.nbrDeliverables,\n                      status: task.status,\n                      dueDate: task.dueDate,\n                      details: task.details\n                    });\n                  },\n                  saveButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 45\n                  }, this),\n                  cancelButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTimes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 30\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 24\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  maxWidth: \"200px\",\n                  marginTop: \"1%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    \"color\": \"white\",\n                    marginRight: \"5px\"\n                  },\n                  children: \" Status: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  options: options,\n                  placeholder: task.status,\n                  onChange: ev => {\n                    setFormData({\n                      status: ev.label,\n                      dueDate: task.dueDate,\n                      taskID: task.taskID,\n                      nbrDeliverables: task.nbrDeliverables,\n                      details: task.details,\n                      comments: task.comments\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleUpdate,\n                  disabled: !formData.taskID,\n                  children: \"Update Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button2, {\n                  onClick: handleDelete,\n                  disabled: !checkedValue.taskID,\n                  children: \"Delete Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    position: \"relative\",\n                    top: \"10%\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    value: `${task.taskID}`,\n                    checked: checkedValue.taskID === `${task.taskID}`,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"11px\",\n                      overflowWrap: \"break-word\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        width: \"70%\"\n                      },\n                      children: \"Select task to delete!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 25\n              }, this)]\n            }, task.taskID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 22\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(SWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this) :\n      /*#__PURE__*/\n      //if page refreshes we use this message to indicate admin is logged out\n      _jsxDEV(\"div\", {\n        style: {\n          width: \"600px\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"30%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          style: {\n            textAlign: \"center\",\n            borderRadius: \"10px\",\n            padding: \"10px\",\n            background: \"red\"\n          },\n          children: [\"Admin signed out, go back to login page!\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              border: \"none\",\n              padding: \"7px\",\n              borderRadius: \"10px\",\n              background: \"#28B0FF\",\n              color: \"white\"\n            },\n            onClick: () => navigate(\"/adminLogin\"),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Go to Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CurrentProject, \"HX7M7Wf2DIZOXdGH8/OJi9XK6Xg=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = CurrentProject;\nconst Wrapper = styled.div`\n  display: flex;\n  `;\n_c2 = Wrapper;\nconst HomeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items:flex-start;\n  width: 900px;\n  margin: 50px;\n  background: rgba(221, 237, 236, 1);\n  border-radius: 5px;\n  `;\n_c3 = HomeWrapper;\nconst Background = styled.div`\n    z-index: -1;\n    background-image: url(${backgroundImage});\n    position: absolute;\n    min-width: 100%;\n    min-height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n  `;\n_c4 = Background;\nconst Title = styled.h1`\nfont-size: 25px;\nmargin-top: 2%;\nmargin-left: 3%;\n`;\n_c5 = Title;\nconst ListWrapper = styled.ul`\nlist-style-type: none;\ndisplay: flex;\nflex-direction: column;\nfont-weight: bold;\npadding: 20px 0px 20px 20px;\nwidth: 17rem;\n`;\n_c6 = ListWrapper;\nconst ListedItem = styled.li`\n/*  adds space between listed items instead of using margin-top */\n`;\nconst SWrapper = styled.div`\ndisplay: flex;\nflex-direction:column;\njustify-content: center;\nalign-items: center;\np{\n    margin-top: 50px ;\n}\n`;\n_c7 = SWrapper;\nconst TaskWrapper = styled.div`\nwidth: 40vw;\nmargin-left: 3%;\nmargin-bottom: 20px;\nborder-radius: 5px;\npadding:10px;\ndisplay: flex;\nflex-direction: column;\nbackground: #42C99D;\n/* align-items:baseline; */\nfont-weight:normal;\nh3{\n  border-bottom: 1px solid;\n  margin-bottom: 5px;\n}\np{\n  color: white;\n}\n\n\n  .tooltip {\n  position: relative;\n  display: inline-block;\n}\n\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 120px;\n  background-color: #5B9BD5;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n\n  /* Position the tooltip */\n  position: absolute;\n  z-index: 1;\n  top: -5px;\n  left: 105%;\n}\n\n.tooltip:hover .tooltiptext {\n  visibility: visible;\n}\n`;\n_c8 = TaskWrapper;\nconst Button = styled.button`\nborder-radius: 5px;\nfont-size: 15px;\nborder: none;\nbackground: #F16436;\npadding: 10px;\nwidth: 150px;\nmargin-top: 15px;\ncolor: white;\n  &:hover{\n    color: white;\n    background-color: rgb(40,176,255);\n    transition: 150ms;\n  }\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n`;\n_c9 = Button;\nconst Button2 = styled(Button)`\nmargin-left: 15px;\n`;\n_c10 = Button2;\nexport default CurrentProject;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"CurrentProject\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"HomeWrapper\");\n$RefreshReg$(_c4, \"Background\");\n$RefreshReg$(_c5, \"Title\");\n$RefreshReg$(_c6, \"ListWrapper\");\n$RefreshReg$(_c7, \"SWrapper\");\n$RefreshReg$(_c8, \"TaskWrapper\");\n$RefreshReg$(_c9, \"Button\");\n$RefreshReg$(_c10, \"Button2\");","map":{"version":3,"sources":["/Users/oliverbloj/Documents/Concordia BootCamp/36.1 WM 5.5.2022/WorkFlow_Management_APP/client/src/components/CurrentProject.js"],"names":["React","useContext","useState","useEffect","backgroundImage","styled","DataContext","Sidebar","useNavigate","useParams","EasyEdit","Types","FontAwesomeIcon","faCheck","faTimes","Spinner","BsPatchQuestionFill","Select","CurrentProject","admin","allTasks","updateTaskStatus","setUpdateTaskStatus","newProjectStatus","setNewProjectStatus","projectById","setProjectById","tasksOfProject","setTasksOfProject","navigate","_id","formData","setFormData","isApiSubscribed","getProjectByID","res","fetch","method","headers","Accept","json","findTaksOfProject","filter","task","data","tasks","find","el","taskID","catch","error","console","log","handleUpdate","settings","body","JSON","stringify","then","response","window","alert","message","handleDelete","checkedValue","setCheckedValue","handleChange","ev","target","value","options","label","progress","setProgress","progressUpdate","e","marginLeft","marginTop","projectName","map","taskName","position","right","fontSize","display","marginRight","DATE","dueDate","nbrDeliverables","details","comments","TEXT","status","maxWidth","alignItems","top","overflowWrap","width","left","textAlign","borderRadius","padding","background","border","color","Wrapper","div","HomeWrapper","Background","Title","h1","ListWrapper","ul","ListedItem","li","SWrapper","TaskWrapper","Button","button","Button2"],"mappings":"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AI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GARE;MAAMC,W;AAUN,MAAMC,UAAU,GAAGvG,MAAM,CAACqG,GAAI;AAChC;AACA,4BAA4BtG,eAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,GATE;MAAMwG,U;AAWR,MAAMC,KAAK,GAAGxG,MAAM,CAACyG,EAAG;AACxB;AACA;AACA;AACA,CAJA;MAAMD,K;AAON,MAAME,WAAW,GAAG1G,MAAM,CAAC2G,EAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,W;AAWN,MAAME,UAAU,GAAG5G,MAAM,CAAC6G,EAAG;AAC7B;AACA,CAFA;AAIA,MAAMC,QAAQ,GAAG9G,MAAM,CAACqG,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMS,Q;AAUN,MAAMC,WAAW,GAAG/G,MAAM,CAACqG,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5CA;MAAMU,W;AA8CN,MAAMC,MAAM,GAAGhH,MAAM,CAACiH,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMD,M;AAoBN,MAAME,OAAO,GAAElH,MAAM,CAACgH,MAAD,CAAS;AAC9B;AACA,CAFA;OAAME,O;AAIN,eAAerG,cAAf","sourcesContent":["\r\nimport React, {useContext, useState, useEffect }  from \"react\";\r\nimport backgroundImage from \"../assets/background2.png\"\r\nimport styled from \"styled-components\";\r\nimport { DataContext } from \"./DataContext\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { useNavigate, useParams} from \"react-router-dom\";\r\nimport EasyEdit, {Types} from 'react-easy-edit';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Spinner from \"./Spinner\";\r\nimport{BsPatchQuestionFill} from \"react-icons/bs\";\r\nimport Select from \"react-select\";\r\n\r\nconst CurrentProject = () =>{\r\nconst {admin,allTasks,updateTaskStatus, setUpdateTaskStatus} = useContext(DataContext);\r\n\r\nconst [newProjectStatus, setNewProjectStatus] = useState(false);\r\nconst [projectById, setProjectById] = useState(null);// state for storing user by Id\r\nconst [tasksOfProject, setTasksOfProject] = useState(null);//state that stores the tasks associated with each project (projectById)\r\n// const [responseObj, setResponseObj] = useState({});\r\n\r\nlet navigate = useNavigate();\r\n\r\nconst {_id} = useParams();//getting the PROJECT _id from the URL\r\nconst [formData, setFormData] = useState({});//Object state for storing form data from inputs\r\n// const save = (value) => { setFormData({...formData, [name]: value})}\r\n// const cancel = () => {console.log(\"Cancelled\")}\r\n\r\nuseEffect(() => {\r\n    // TODO: get seating data for selected flight\r\n    let isApiSubscribed = true;//this is used for cleanup function , to mount and unmount\r\n    if(isApiSubscribed){\r\n        const getProjectByID = async () => {\r\n            const res = await fetch(`/projects/${_id}`,  {\r\n                  method:\"GET\",\r\n                  headers:{\r\n                  Accept: \"application/json\",\r\n                  \"Content-Type\": \"application/json\",},})\r\n             const json = await res.json();\r\n             const findTaksOfProject = allTasks.filter((task) => json.data.tasks.find((el) => task.taskID === el) );\r\n             setProjectById(json.data);\r\n             setTasksOfProject(findTaksOfProject);\r\n              }\r\n              getProjectByID() //calling the function\r\n    //catching any errors if returned\r\n    .catch(error=>console.log(\"ERROR : \", error));\r\n\r\n    }\r\n    return () => {\r\n      // cancel the subscription, unmounting\r\n      isApiSubscribed = false;\r\n  };\r\n  }, [updateTaskStatus]);//useEffect will also execute when selectedFlight changes\r\n\r\n\r\n  const handleUpdate = async() =>{\r\n    const settings = {\r\n      method: 'PUT',\r\n      body: JSON.stringify(formData),\r\n      headers: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n      }\r\n  }\r\n  fetch(\"/tasks\", settings)\r\n  .then((res)=>res.json())\r\n  .then((response)=>{\r\n   window.alert(response.message);//set the received server response in a window alert\r\n   setUpdateTaskStatus(!updateTaskStatus); //sets the status of update to the opposite of current value\r\n  // setResponseObj({status: response.status, message: response.message}); // setting the received response object in a state\r\n}).catch((error) => console.log(\"ERROR: \", error));\r\n    }\r\n\r\n//     //we want to show the returned message response from the server only for 2 seconds\r\n//     const [showMessage, setShowMessage] = useState(false);\r\n// useEffect(() => {\r\n//   setTimeout(() =>{\r\n//     // we set the state showMessage to true for 2 seconds\r\n//     setShowMessage(!showMessage);\r\n//   }, 2000)\r\n// }, []);\r\n\r\nconst handleDelete = async() =>{\r\n  const settings = {\r\n    method: 'DELETE',\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }\r\n}\r\nfetch(`/tasks/${checkedValue.taskID}`, settings)\r\n.then((res)=>res.json())\r\n.then((response)=>{\r\n window.alert(response.message);//set the received server response in a window alert\r\n setUpdateTaskStatus(!updateTaskStatus); //sets the status of update to the opposite of current value\r\n// setResponseObj({status: response.status, message: response.message}); // setting the received response object in a state\r\n}).catch((error) => console.log(\"ERROR: \", error));\r\n  }\r\n\r\n  //State used for checked radio button for each task before deleting\r\n  const [checkedValue, setCheckedValue] = useState({taskID:\"\"});\r\n  const handleChange = (ev) => {\r\n    setCheckedValue({taskID: ev.target.value});\r\n  };\r\n\r\n\r\n  // Drop Down Progress Menu\r\n  const options = [\r\n    { value: \"status\", label: \"Work in progress\" },\r\n    { value: \"status\", label: \"Submitted for review\" },\r\n    { value: \"status\", label: \"Started\" },\r\n  ];\r\n\r\n  const [progress, setProgress] = useState();\r\n  const progressUpdate = (e) => {\r\n    setProgress(e.label);\r\n  };\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <Background />\r\n        <Wrapper>\r\n          <Sidebar\r\n            newProjectStatus={newProjectStatus}\r\n            setNewProjectStatus={setNewProjectStatus}\r\n          />\r\n\r\n          {newProjectStatus === true || admin !== null ? (\r\n            <HomeWrapper>\r\n              <Title>My Projects</Title>\r\n              {projectById !== null &&\r\n              <h2 style={{marginLeft: \"3%\",\"color\":\"#F16436\", marginTop: \"20px\"}}> Project - {projectById.projectName} </h2> }\r\n\r\n              <ListWrapper>\r\n               {(projectById !== null && tasksOfProject!==null) ? (\r\n               tasksOfProject.map((task)=>{\r\n                   return (\r\n                     <TaskWrapper key={task.taskID} >\r\n\r\n                      <span className=\"tooltip\">\r\n                       <h3 style={{ \"color\":\"#FED980\"}}>Task Name: {task.taskName}\r\n                       <BsPatchQuestionFill size={20} style ={{position: \"absolute\", right: \"0\"}}/></h3>\r\n                       <span className=\"tooltiptext\"  style={{fontSize: \"12px\"}}>\r\n                         Click on each task value to edit and update or select the task to delete!</span>\r\n                       </span>\r\n\r\n                       <span style={{ display:\"flex\"}}>\r\n                       <p style={{ \"color\":\"white\", marginRight: \"5px\"}}> Due Date: </p>\r\n                         <EasyEdit\r\n                           type={Types.DATE}\r\n                           value={task.dueDate}\r\n                           onSave={(value) => { setFormData({dueDate: value, taskID: task.taskID,\r\n                            nbrDeliverables: task.nbrDeliverables, details: task.details, comments: task.comments})}}\r\n                           saveButtonLabel={<FontAwesomeIcon icon={faCheck} />}\r\n                           cancelButtonLabel={\r\n                             <FontAwesomeIcon icon={faTimes} />\r\n                           } />\r\n                        </span>\r\n\r\n                       <span style={{ display:\"flex\"}} >\r\n                       <p style={{ \"color\":\"white\", marginRight: \"5px\"}}> Number of Deliverables: </p>\r\n                         <EasyEdit\r\n                           type={Types.TEXT}\r\n                           value={task.nbrDeliverables}\r\n                           onSave={(value) => {\r\n                             setFormData({nbrDeliverables: value, taskID: task.taskID, status:task.status,\r\n                              dueDate: task.dueDate, details: task.details, comments: task.comments})}}\r\n                           saveButtonLabel={<FontAwesomeIcon icon={faCheck} />}\r\n                           cancelButtonLabel={\r\n                             <FontAwesomeIcon icon={faTimes} />\r\n                           } />\r\n                        </span>\r\n\r\n                       <span style={{ display:\"flex\"}} >\r\n                       <p style={{ \"color\":\"white\", marginRight: \"5px\"}}> Task Details: </p>\r\n                         <EasyEdit\r\n                           type={Types.TEXT}\r\n                           value={task.details}\r\n                           onSave={(value) => {\r\n                            setFormData({details: value, taskID: task.taskID, nbrDeliverables: task.nbrDeliverables,\r\n                              status:task.status, dueDate: task.dueDate, comments: task.comments})}}\r\n                           saveButtonLabel={<FontAwesomeIcon icon={faCheck} />}\r\n                           cancelButtonLabel={\r\n                             <FontAwesomeIcon icon={faTimes} />\r\n                           }/>\r\n                       </span>\r\n\r\n                       <span style={{ display:\"flex\"}} >\r\n                       <p style={{ \"color\":\"white\", marginRight: \"5px\"}}> Comments: </p>\r\n                         <EasyEdit\r\n                           type={Types.TEXT}\r\n                           value={task.comments !== \"\" ? task.comments : \"Click to edit\" }\r\n                           onSave={(value) => {\r\n                            setFormData({comments: value, taskID: task.taskID, nbrDeliverables: task.nbrDeliverables,\r\n                              status:task.status, dueDate: task.dueDate, details: task.details})}}\r\n                           saveButtonLabel={<FontAwesomeIcon icon={faCheck} />}\r\n                           cancelButtonLabel={\r\n                             <FontAwesomeIcon icon={faTimes} />\r\n                           } />\r\n                        </span>\r\n\r\n                    <div style={{ display: \"flex\", maxWidth: \"200px\", marginTop: \"1%\" }}>\r\n                    <p style={{ \"color\":\"white\", marginRight: \"5px\"}}> Status: </p>\r\n                       <Select options={options} placeholder ={task.status}\r\n                       onChange={(ev) => { setFormData({status: ev.label, dueDate: task.dueDate, taskID: task.taskID,\r\n                            nbrDeliverables: task.nbrDeliverables, details: task.details, comments: task.comments})}} />\r\n                    </div>\r\n                       \r\n\r\n                        <div style={{display:\"flex\"}}>\r\n                        <Button onClick={handleUpdate} disabled = {(!formData.taskID)}>\r\n                         Update Task\r\n                        </Button>\r\n\r\n                        <Button2 onClick={handleDelete} disabled = {(!checkedValue.taskID)}>\r\n                         Delete Task\r\n                        </Button2>\r\n                      \r\n                        <label style={ {display: \"flex\", alignItems:\"center\", position:\"relative\", top:\"10%\"}}>\r\n                          <input type=\"radio\" value= {`${task.taskID}`} checked={checkedValue.taskID === `${task.taskID}`} onChange={handleChange}/>\r\n                          <span style={{\r\n                            fontSize: \"11px\", overflowWrap:\"break-word\"}}>\r\n                              <p  style={{width: \"70%\"}} >Select task to delete!</p></span>\r\n                          </label>\r\n                        \r\n                        </div>  \r\n        {/* responseObj.status !== 201 ?\r\n         showMessage && <>\r\n              <h3 style={{\"marginTop\": \"10px\",\"color\":\"#D80026\",\r\n             \"fontSize\":\"15px\", \"textAlign\":\"center\"}} >{responseObj.message}</h3>\r\n            </>\r\n         :\r\n         (showMessage===false) &&  <>\r\n            <h3 style={{\"marginTop\": \"10px\",\"color\":\"#D80026\",\r\n            \"fontSize\":\"15px\", \"textAlign\":\"center\"}} >{responseObj.message}</h3>\r\n            {/* <p style={{\"marginTop\": \"10px\",\"color\":\"#D80026\",\r\n            \"fontSize\":\"15px\", \"textAlign\":\"center\"}}>\r\n                Go to <b>My Projects</b> section to see your created Projects!</p> </>*/}\r\n        \r\n  </TaskWrapper>\r\n  )}))  : (<SWrapper>\r\n                    <Spinner/>\r\n                    <p>Loading...</p>\r\n                  </SWrapper>)\r\n               }\r\n\r\n              </ListWrapper>\r\n            </HomeWrapper>\r\n          ) : (\r\n            //if page refreshes we use this message to indicate admin is logged out\r\n            <div\r\n              style={{\r\n                width: \"600px\",\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"30%\",\r\n              }}\r\n            >\r\n              <Title\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  borderRadius: \"10px\",\r\n                  padding: \"10px\",\r\n                  background: \"red\",\r\n                }}\r\n              >\r\n                Admin signed out, go back to login page!\r\n                <button\r\n                  style={{\r\n                    border: \"none\",\r\n                    padding: \"7px\",\r\n                    borderRadius: \"10px\",\r\n                    background: \"#28B0FF\",\r\n                    color: \"white\",\r\n                  }}\r\n                  onClick={() => navigate(\"/adminLogin\")}\r\n                >\r\n                  <b>Go to Login</b>\r\n                </button>\r\n              </Title>\r\n            </div>\r\n          )\r\n          }\r\n        </Wrapper>\r\n      </>\r\n    );\r\n    }\r\n\r\n  const Wrapper = styled.div`\r\n  display: flex;\r\n  `\r\n  const HomeWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items:flex-start;\r\n  width: 900px;\r\n  margin: 50px;\r\n  background: rgba(221, 237, 236, 1);\r\n  border-radius: 5px;\r\n  `\r\n\r\n  const Background = styled.div`\r\n    z-index: -1;\r\n    background-image: url(${backgroundImage});\r\n    position: absolute;\r\n    min-width: 100%;\r\n    min-height: 100%;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: center;\r\n  `\r\n\r\nconst Title = styled.h1`\r\nfont-size: 25px;\r\nmargin-top: 2%;\r\nmargin-left: 3%;\r\n`\r\n\r\n\r\nconst ListWrapper = styled.ul`\r\nlist-style-type: none;\r\ndisplay: flex;\r\nflex-direction: column;\r\nfont-weight: bold;\r\npadding: 20px 0px 20px 20px;\r\nwidth: 17rem;\r\n`\r\n\r\n\r\n\r\nconst ListedItem = styled.li`\r\n/*  adds space between listed items instead of using margin-top */\r\n`\r\n\r\nconst SWrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction:column;\r\njustify-content: center;\r\nalign-items: center;\r\np{\r\n    margin-top: 50px ;\r\n}\r\n`\r\n\r\nconst TaskWrapper = styled.div`\r\nwidth: 40vw;\r\nmargin-left: 3%;\r\nmargin-bottom: 20px;\r\nborder-radius: 5px;\r\npadding:10px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nbackground: #42C99D;\r\n/* align-items:baseline; */\r\nfont-weight:normal;\r\nh3{\r\n  border-bottom: 1px solid;\r\n  margin-bottom: 5px;\r\n}\r\np{\r\n  color: white;\r\n}\r\n\r\n\r\n  .tooltip {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n.tooltip .tooltiptext {\r\n  visibility: hidden;\r\n  width: 120px;\r\n  background-color: #5B9BD5;\r\n  color: #fff;\r\n  text-align: center;\r\n  border-radius: 6px;\r\n  padding: 5px 0;\r\n\r\n  /* Position the tooltip */\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: -5px;\r\n  left: 105%;\r\n}\r\n\r\n.tooltip:hover .tooltiptext {\r\n  visibility: visible;\r\n}\r\n`\r\n\r\nconst Button = styled.button`\r\nborder-radius: 5px;\r\nfont-size: 15px;\r\nborder: none;\r\nbackground: #F16436;\r\npadding: 10px;\r\nwidth: 150px;\r\nmargin-top: 15px;\r\ncolor: white;\r\n  &:hover{\r\n    color: white;\r\n    background-color: rgb(40,176,255);\r\n    transition: 150ms;\r\n  }\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.7;\r\n  }\r\n`\r\n\r\nconst Button2 =styled(Button)`\r\nmargin-left: 15px;\r\n`\r\n\r\nexport default CurrentProject;"]},"metadata":{},"sourceType":"module"}