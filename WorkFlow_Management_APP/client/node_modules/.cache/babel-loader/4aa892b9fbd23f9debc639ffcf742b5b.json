{"ast":null,"code":"var _jsxFileName = \"/Users/oliverbloj/Documents/Concordia BootCamp/36.1 WM 5.5.2022/WorkFlow_Management_APP/client/src/components/CurrentProject.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport backgroundImage from \"../assets/background2.png\";\nimport styled from \"styled-components\";\nimport { DataContext } from \"./DataContext\";\nimport Sidebar from \"./Sidebar\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport EasyEdit, { Types } from \"react-easy-edit\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport Spinner from \"./Spinner\";\nimport { BsPatchQuestionFill } from \"react-icons/bs\";\nimport Select from \"react-select\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CurrentProject = () => {\n  _s();\n\n  const {\n    admin,\n    allTasks,\n    updateTaskStatus,\n    setUpdateTaskStatus\n  } = useContext(DataContext);\n  const [newProjectStatus, setNewProjectStatus] = useState(false);\n  const [projectById, setProjectById] = useState(null); // state for storing user by Id\n\n  const [tasksOfProject, setTasksOfProject] = useState(null); //state that stores the tasks associated with each project (projectById)\n  // const [responseObj, setResponseObj] = useState({});\n\n  let navigate = useNavigate();\n  const {\n    _id\n  } = useParams(); //getting the PROJECT _id from the URL\n\n  const [formData, setFormData] = useState({}); //Object state for storing form data from inputs\n  // const save = (value) => { setFormData({...formData, [name]: value})}\n  // const cancel = () => {console.log(\"Cancelled\")}\n\n  useEffect(() => {\n    // TODO: get seating data for selected flight\n    let isApiSubscribed = true; //this is used for cleanup function , to mount and unmount\n\n    if (isApiSubscribed) {\n      const getProjectByID = async () => {\n        const res = await fetch(`/projects/${_id}`, {\n          method: \"GET\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const json = await res.json();\n        const findTaksOfProject = allTasks.filter(task => json.data.tasks.find(el => task.taskID === el));\n        setProjectById(json.data);\n        setTasksOfProject(findTaksOfProject);\n      };\n\n      getProjectByID() //calling the function\n      //catching any errors if returned\n      .catch(error => console.log(\"ERROR : \", error));\n    }\n\n    return () => {\n      // cancel the subscription, unmounting\n      isApiSubscribed = false;\n    };\n  }, [updateTaskStatus]); //useEffect will also execute when selectedFlight changes\n\n  const handleUpdate = async () => {\n    const settings = {\n      method: \"PUT\",\n      body: JSON.stringify(formData),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(\"/tasks\", settings).then(res => res.json()).then(response => {\n      window.alert(response.message); //set the received server response in a window alert\n\n      setUpdateTaskStatus(!updateTaskStatus); //sets the status of update to the opposite of current value\n      // setResponseObj({status: response.status, message: response.message}); // setting the received response object in a state\n    }).catch(error => console.log(\"ERROR: \", error));\n  }; //     //we want to show the returned message response from the server only for 2 seconds\n  //     const [showMessage, setShowMessage] = useState(false);\n  // useEffect(() => {\n  //   setTimeout(() =>{\n  //     // we set the state showMessage to true for 2 seconds\n  //     setShowMessage(!showMessage);\n  //   }, 2000)\n  // }, []);\n\n\n  const handleDelete = async () => {\n    const settings = {\n      method: \"DELETE\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    fetch(`/tasks/${checkedValue.taskID}`, settings).then(res => res.json()).then(response => {\n      window.alert(response.message); //set the received server response in a window alert\n\n      setUpdateTaskStatus(!updateTaskStatus); //sets the status of update to the opposite of current value\n      // setResponseObj({status: response.status, message: response.message}); // setting the received response object in a state\n    }).catch(error => console.log(\"ERROR: \", error));\n  }; //State used for checked radio button for each task before deleting\n\n\n  const [checkedValue, setCheckedValue] = useState({\n    taskID: \"\"\n  });\n\n  const handleChange = ev => {\n    setCheckedValue({\n      taskID: ev.target.value\n    });\n  }; // Drop Down Progress Menu\n\n\n  const options = [{\n    value: \"status\",\n    label: \"Work in progress\"\n  }, {\n    value: \"status\",\n    label: \"Submitted for review\"\n  }, {\n    value: \"status\",\n    label: \"Started\"\n  }];\n  const [progress, setProgress] = useState();\n\n  const progressUpdate = e => {\n    setProgress(e.label);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        newProjectStatus: newProjectStatus,\n        setNewProjectStatus: setNewProjectStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), newProjectStatus === true || admin !== null ? /*#__PURE__*/_jsxDEV(HomeWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"My Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), projectById !== null && /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginLeft: \"3%\",\n            color: \"#F16436\",\n            marginTop: \"20px\"\n          },\n          children: [\" \", \"Project - \", projectById.projectName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ListWrapper, {\n          children: projectById !== null && tasksOfProject !== null ? tasksOfProject.map(task => {\n            return /*#__PURE__*/_jsxDEV(TaskWrapper, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tooltip\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    color: \"#FED980\"\n                  },\n                  children: [\"Task Name: \", task.taskName, /*#__PURE__*/_jsxDEV(BsPatchQuestionFill, {\n                    size: 20,\n                    style: {\n                      position: \"absolute\",\n                      right: \"0\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tooltiptext\",\n                  style: {\n                    fontSize: \"12px\"\n                  },\n                  children: \"Click on each task value to edit and update or select the task to delete!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"white\",\n                    marginRight: \"5px\"\n                  },\n                  children: [\" \", \"Due Date:\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(EasyEdit, {\n                  type: Types.DATE,\n                  value: task.dueDate,\n                  onSave: value => {\n                    setFormData({\n                      dueDate: value,\n                      taskID: task.taskID,\n                      nbrDeliverables: task.nbrDeliverables,\n                      details: task.details,\n                      comments: task.comments\n                    });\n                  },\n                  saveButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 44\n                  }, this),\n                  cancelButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTimes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"white\",\n                    marginRight: \"5px\"\n                  },\n                  children: [\" \", \"Number of Deliverables:\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(EasyEdit, {\n                  type: Types.TEXT,\n                  value: task.nbrDeliverables,\n                  onSave: value => {\n                    setFormData({\n                      nbrDeliverables: value,\n                      taskID: task.taskID,\n                      status: task.status,\n                      dueDate: task.dueDate,\n                      details: task.details,\n                      comments: task.comments\n                    });\n                  },\n                  saveButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 44\n                  }, this),\n                  cancelButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTimes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"white\",\n                    marginRight: \"5px\"\n                  },\n                  children: [\" \", \"Task Details:\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(EasyEdit, {\n                  type: Types.TEXT,\n                  value: task.details,\n                  onSave: value => {\n                    setFormData({\n                      details: value,\n                      taskID: task.taskID,\n                      nbrDeliverables: task.nbrDeliverables,\n                      status: task.status,\n                      dueDate: task.dueDate,\n                      comments: task.comments\n                    });\n                  },\n                  saveButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 44\n                  }, this),\n                  cancelButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTimes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"white\",\n                    marginRight: \"5px\"\n                  },\n                  children: [\" \", \"Comments:\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(EasyEdit, {\n                  type: Types.TEXT,\n                  value: task.comments !== \"\" ? task.comments : \"Click to edit\",\n                  onSave: value => {\n                    setFormData({\n                      comments: value,\n                      taskID: task.taskID,\n                      nbrDeliverables: task.nbrDeliverables,\n                      status: task.status,\n                      dueDate: task.dueDate,\n                      details: task.details\n                    });\n                  },\n                  saveButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faCheck\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 44\n                  }, this),\n                  cancelButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTimes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 46\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  maxWidth: \"200px\",\n                  marginTop: \"1%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: \"white\",\n                    marginRight: \"5px\"\n                  },\n                  children: [\" \", \"Status:\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  options: options,\n                  placeholder: task.status,\n                  onChange: ev => {\n                    setFormData({\n                      status: ev.label,\n                      dueDate: task.dueDate,\n                      taskID: task.taskID,\n                      nbrDeliverables: task.nbrDeliverables,\n                      details: task.details,\n                      comments: task.comments\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  onClick: handleUpdate,\n                  disabled: !formData.taskID,\n                  children: \"Update Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Button2, {\n                  onClick: handleDelete,\n                  disabled: !checkedValue.taskID,\n                  children: \"Delete Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    position: \"relative\",\n                    top: \"10%\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"radio\",\n                    value: `${task.taskID}`,\n                    checked: checkedValue.taskID === `${task.taskID}`,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: \"11px\",\n                      overflowWrap: \"break-word\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      style: {\n                        width: \"70%\"\n                      },\n                      children: \"Select task to delete!\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 23\n              }, this)]\n            }, task.taskID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 21\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(SWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      //if page refreshes we use this message to indicate admin is logged out\n      _jsxDEV(\"div\", {\n        style: {\n          width: \"600px\",\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"30%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          style: {\n            textAlign: \"center\",\n            borderRadius: \"10px\",\n            padding: \"10px\",\n            background: \"red\"\n          },\n          children: [\"Admin signed out, go back to login page!\", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              border: \"none\",\n              padding: \"7px\",\n              borderRadius: \"10px\",\n              background: \"#28B0FF\",\n              color: \"white\"\n            },\n            onClick: () => navigate(\"/adminLogin\"),\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Go to Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CurrentProject, \"armdHfhXG0oRMtGzFNuksybY7AE=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = CurrentProject;\nconst Wrapper = styled.div`\n  display: flex;\n`;\n_c2 = Wrapper;\nconst HomeWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 900px;\n  margin: 50px;\n  background: rgba(221, 237, 236, 1);\n  border-radius: 5px;\n`;\n_c3 = HomeWrapper;\nconst Background = styled.div`\n  z-index: -1;\n  background-image: url(${backgroundImage});\n  position: absolute;\n  min-width: 100%;\n  min-height: 100%;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n`;\n_c4 = Background;\nconst Title = styled.h1`\n  font-size: 25px;\n  margin-top: 2%;\n  margin-left: 3%;\n`;\n_c5 = Title;\nconst ListWrapper = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-direction: column;\n  font-weight: bold;\n  padding: 20px 0px 20px 20px;\n  width: 17rem;\n`;\n_c6 = ListWrapper;\nconst ListedItem = styled.li`\n  /*  adds space between listed items instead of using margin-top */\n`;\nconst SWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  p {\n    margin-top: 50px;\n  }\n`;\n_c7 = SWrapper;\nconst TaskWrapper = styled.div`\n  width: 40vw;\n  margin-left: 3%;\n  margin-bottom: 20px;\n  border-radius: 5px;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  background: #42c99d;\n  /* align-items:baseline; */\n  font-weight: normal;\n  h3 {\n    border-bottom: 1px solid;\n    margin-bottom: 5px;\n  }\n  p {\n    color: white;\n  }\n\n  .tooltip {\n    position: relative;\n    display: inline-block;\n  }\n\n  .tooltip .tooltiptext {\n    visibility: hidden;\n    width: 120px;\n    background-color: #5b9bd5;\n    color: #fff;\n    text-align: center;\n    border-radius: 6px;\n    padding: 5px 0;\n\n    /* Position the tooltip */\n    position: absolute;\n    z-index: 1;\n    top: -5px;\n    left: 105%;\n  }\n\n  .tooltip:hover .tooltiptext {\n    visibility: visible;\n  }\n`;\n_c8 = TaskWrapper;\nconst Button = styled.button`\n  border-radius: 5px;\n  font-size: 15px;\n  border: none;\n  background: #f16436;\n  padding: 10px;\n  width: 150px;\n  margin-top: 15px;\n  color: white;\n  &:hover {\n    color: white;\n    background-color: rgb(40, 176, 255);\n    transition: 150ms;\n  }\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n`;\n_c9 = Button;\nconst Button2 = styled(Button)`\n  margin-left: 15px;\n`;\n_c10 = Button2;\nexport default CurrentProject;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"CurrentProject\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"HomeWrapper\");\n$RefreshReg$(_c4, \"Background\");\n$RefreshReg$(_c5, \"Title\");\n$RefreshReg$(_c6, \"ListWrapper\");\n$RefreshReg$(_c7, \"SWrapper\");\n$RefreshReg$(_c8, \"TaskWrapper\");\n$RefreshReg$(_c9, \"Button\");\n$RefreshReg$(_c10, \"Button2\");","map":{"version":3,"sources":["/Users/oliverbloj/Documents/Concordia BootCamp/36.1 WM 5.5.2022/WorkFlow_Management_APP/client/src/components/CurrentProject.js"],"names":["React","useContext","useState","useEffect","backgroundImage","styled","DataContext","Sidebar","useNavigate","useParams","EasyEdit","Types","FontAwesomeIcon","faCheck","faTimes","Spinner","BsPatchQuestionFill","Select","CurrentProject","admin","allTasks","updateTaskStatus","setUpdateTaskStatus","newProjectStatus","setNewProjectStatus","projectById","setProjectById","tasksOfProject","setTasksOfProject","navigate","_id","formData","setFormData","isApiSubscribed","getProjectByID","res","fetch","method","headers","Accept","json","findTaksOfProject","filter","task","data","tasks","find","el","taskID","catch","error","console","log","handleUpdate","settings","body","JSON","stringify","then","response","window","alert","message","handleDelete","checkedValue","setCheckedValue","handleChange","ev","target","value","options","label","progress","setProgress","progressUpdate","e","marginLeft","color","marginTop","projectName","map","taskName","position","right","fontSize","display","marginRight","DATE","dueDate","nbrDeliverables","details","comments","TEXT","status","maxWidth","alignItems","top","overflowWrap","width","left","textAlign","borderRadius","padding","background","border","Wrapper","div","HomeWrapper","Background","Title","h1","ListWrapper","ul","ListedItem","li","SWrapper","TaskWrapper","Button","button","Button2"],"mappings":"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ADF;AA8QD,CA3XD;;GAAMX,c;UASWV,W,EAECC,S;;;KAXZS,c;AA6XN,MAAMuF,OAAO,GAAGpG,MAAM,CAACqG,GAAI;AAC3B;AACA,CAFA;MAAMD,O;AAGN,MAAME,WAAW,GAAGtG,MAAM,CAACqG,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMC,W;AAUN,MAAMC,UAAU,GAAGvG,MAAM,CAACqG,GAAI;AAC9B;AACA,0BAA0BtG,eAAgB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMwG,U;AAWN,MAAMC,KAAK,GAAGxG,MAAM,CAACyG,EAAG;AACxB;AACA;AACA;AACA,CAJA;MAAMD,K;AAMN,MAAME,WAAW,GAAG1G,MAAM,CAAC2G,EAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,W;AASN,MAAME,UAAU,GAAG5G,MAAM,CAAC6G,EAAG;AAC7B;AACA,CAFA;AAIA,MAAMC,QAAQ,GAAG9G,MAAM,CAACqG,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;MAAMS,Q;AAUN,MAAMC,WAAW,GAAG/G,MAAM,CAACqG,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3CA;MAAMU,W;AA6CN,MAAMC,MAAM,GAAGhH,MAAM,CAACiH,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMD,M;AAoBN,MAAME,OAAO,GAAGlH,MAAM,CAACgH,MAAD,CAAS;AAC/B;AACA,CAFA;OAAME,O;AAIN,eAAerG,cAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport backgroundImage from \"../assets/background2.png\";\r\nimport styled from \"styled-components\";\r\nimport { DataContext } from \"./DataContext\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport EasyEdit, { Types } from \"react-easy-edit\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Spinner from \"./Spinner\";\r\nimport { BsPatchQuestionFill } from \"react-icons/bs\";\r\nimport Select from \"react-select\";\r\n\r\nconst CurrentProject = () => {\r\n  const { admin, allTasks, updateTaskStatus, setUpdateTaskStatus } =\r\n    useContext(DataContext);\r\n\r\n  const [newProjectStatus, setNewProjectStatus] = useState(false);\r\n  const [projectById, setProjectById] = useState(null); // state for storing user by Id\r\n  const [tasksOfProject, setTasksOfProject] = useState(null); //state that stores the tasks associated with each project (projectById)\r\n  // const [responseObj, setResponseObj] = useState({});\r\n\r\n  let navigate = useNavigate();\r\n\r\n  const { _id } = useParams(); //getting the PROJECT _id from the URL\r\n  const [formData, setFormData] = useState({}); //Object state for storing form data from inputs\r\n  // const save = (value) => { setFormData({...formData, [name]: value})}\r\n  // const cancel = () => {console.log(\"Cancelled\")}\r\n\r\n  useEffect(() => {\r\n    // TODO: get seating data for selected flight\r\n    let isApiSubscribed = true; //this is used for cleanup function , to mount and unmount\r\n    if (isApiSubscribed) {\r\n      const getProjectByID = async () => {\r\n        const res = await fetch(`/projects/${_id}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        const json = await res.json();\r\n        const findTaksOfProject = allTasks.filter((task) =>\r\n          json.data.tasks.find((el) => task.taskID === el)\r\n        );\r\n        setProjectById(json.data);\r\n        setTasksOfProject(findTaksOfProject);\r\n      };\r\n      getProjectByID() //calling the function\r\n        //catching any errors if returned\r\n        .catch((error) => console.log(\"ERROR : \", error));\r\n    }\r\n    return () => {\r\n      // cancel the subscription, unmounting\r\n      isApiSubscribed = false;\r\n    };\r\n  }, [updateTaskStatus]); //useEffect will also execute when selectedFlight changes\r\n\r\n  const handleUpdate = async () => {\r\n    const settings = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(formData),\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(\"/tasks\", settings)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        window.alert(response.message); //set the received server response in a window alert\r\n        setUpdateTaskStatus(!updateTaskStatus); //sets the status of update to the opposite of current value\r\n        // setResponseObj({status: response.status, message: response.message}); // setting the received response object in a state\r\n      })\r\n      .catch((error) => console.log(\"ERROR: \", error));\r\n  };\r\n\r\n  //     //we want to show the returned message response from the server only for 2 seconds\r\n  //     const [showMessage, setShowMessage] = useState(false);\r\n  // useEffect(() => {\r\n  //   setTimeout(() =>{\r\n  //     // we set the state showMessage to true for 2 seconds\r\n  //     setShowMessage(!showMessage);\r\n  //   }, 2000)\r\n  // }, []);\r\n\r\n  const handleDelete = async () => {\r\n    const settings = {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    fetch(`/tasks/${checkedValue.taskID}`, settings)\r\n      .then((res) => res.json())\r\n      .then((response) => {\r\n        window.alert(response.message); //set the received server response in a window alert\r\n        setUpdateTaskStatus(!updateTaskStatus); //sets the status of update to the opposite of current value\r\n        // setResponseObj({status: response.status, message: response.message}); // setting the received response object in a state\r\n      })\r\n      .catch((error) => console.log(\"ERROR: \", error));\r\n  };\r\n\r\n  //State used for checked radio button for each task before deleting\r\n  const [checkedValue, setCheckedValue] = useState({ taskID: \"\" });\r\n  const handleChange = (ev) => {\r\n    setCheckedValue({ taskID: ev.target.value });\r\n  };\r\n\r\n  // Drop Down Progress Menu\r\n  const options = [\r\n    { value: \"status\", label: \"Work in progress\" },\r\n    { value: \"status\", label: \"Submitted for review\" },\r\n    { value: \"status\", label: \"Started\" },\r\n  ];\r\n\r\n  const [progress, setProgress] = useState();\r\n  const progressUpdate = (e) => {\r\n    setProgress(e.label);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Background />\r\n      <Wrapper>\r\n        <Sidebar\r\n          newProjectStatus={newProjectStatus}\r\n          setNewProjectStatus={setNewProjectStatus}\r\n        />\r\n\r\n        {newProjectStatus === true || admin !== null ? (\r\n          <HomeWrapper>\r\n            <Title>My Projects</Title>\r\n            {projectById !== null && (\r\n              <h2\r\n                style={{\r\n                  marginLeft: \"3%\",\r\n                  color: \"#F16436\",\r\n                  marginTop: \"20px\",\r\n                }}\r\n              >\r\n                {\" \"}\r\n                Project - {projectById.projectName}{\" \"}\r\n              </h2>\r\n            )}\r\n\r\n            <ListWrapper>\r\n              {projectById !== null && tasksOfProject !== null ? (\r\n                tasksOfProject.map((task) => {\r\n                  return (\r\n                    <TaskWrapper key={task.taskID}>\r\n                      <span className=\"tooltip\">\r\n                        <h3 style={{ color: \"#FED980\" }}>\r\n                          Task Name: {task.taskName}\r\n                          <BsPatchQuestionFill\r\n                            size={20}\r\n                            style={{ position: \"absolute\", right: \"0\" }}\r\n                          />\r\n                        </h3>\r\n                        <span\r\n                          className=\"tooltiptext\"\r\n                          style={{ fontSize: \"12px\" }}\r\n                        >\r\n                          Click on each task value to edit and update or select\r\n                          the task to delete!\r\n                        </span>\r\n                      </span>\r\n\r\n                      <span style={{ display: \"flex\" }}>\r\n                        <p style={{ color: \"white\", marginRight: \"5px\" }}>\r\n                          {\" \"}\r\n                          Due Date:{\" \"}\r\n                        </p>\r\n                        <EasyEdit\r\n                          type={Types.DATE}\r\n                          value={task.dueDate}\r\n                          onSave={(value) => {\r\n                            setFormData({\r\n                              dueDate: value,\r\n                              taskID: task.taskID,\r\n                              nbrDeliverables: task.nbrDeliverables,\r\n                              details: task.details,\r\n                              comments: task.comments,\r\n                            });\r\n                          }}\r\n                          saveButtonLabel={<FontAwesomeIcon icon={faCheck} />}\r\n                          cancelButtonLabel={<FontAwesomeIcon icon={faTimes} />}\r\n                        />\r\n                      </span>\r\n\r\n                      <span style={{ display: \"flex\" }}>\r\n                        <p style={{ color: \"white\", marginRight: \"5px\" }}>\r\n                          {\" \"}\r\n                          Number of Deliverables:{\" \"}\r\n                        </p>\r\n                        <EasyEdit\r\n                          type={Types.TEXT}\r\n                          value={task.nbrDeliverables}\r\n                          onSave={(value) => {\r\n                            setFormData({\r\n                              nbrDeliverables: value,\r\n                              taskID: task.taskID,\r\n                              status: task.status,\r\n                              dueDate: task.dueDate,\r\n                              details: task.details,\r\n                              comments: task.comments,\r\n                            });\r\n                          }}\r\n                          saveButtonLabel={<FontAwesomeIcon icon={faCheck} />}\r\n                          cancelButtonLabel={<FontAwesomeIcon icon={faTimes} />}\r\n                        />\r\n                      </span>\r\n\r\n                      <span style={{ display: \"flex\" }}>\r\n                        <p style={{ color: \"white\", marginRight: \"5px\" }}>\r\n                          {\" \"}\r\n                          Task Details:{\" \"}\r\n                        </p>\r\n                        <EasyEdit\r\n                          type={Types.TEXT}\r\n                          value={task.details}\r\n                          onSave={(value) => {\r\n                            setFormData({\r\n                              details: value,\r\n                              taskID: task.taskID,\r\n                              nbrDeliverables: task.nbrDeliverables,\r\n                              status: task.status,\r\n                              dueDate: task.dueDate,\r\n                              comments: task.comments,\r\n                            });\r\n                          }}\r\n                          saveButtonLabel={<FontAwesomeIcon icon={faCheck} />}\r\n                          cancelButtonLabel={<FontAwesomeIcon icon={faTimes} />}\r\n                        />\r\n                      </span>\r\n\r\n                      <span style={{ display: \"flex\" }}>\r\n                        <p style={{ color: \"white\", marginRight: \"5px\" }}>\r\n                          {\" \"}\r\n                          Comments:{\" \"}\r\n                        </p>\r\n                        <EasyEdit\r\n                          type={Types.TEXT}\r\n                          value={\r\n                            task.comments !== \"\"\r\n                              ? task.comments\r\n                              : \"Click to edit\"\r\n                          }\r\n                          onSave={(value) => {\r\n                            setFormData({\r\n                              comments: value,\r\n                              taskID: task.taskID,\r\n                              nbrDeliverables: task.nbrDeliverables,\r\n                              status: task.status,\r\n                              dueDate: task.dueDate,\r\n                              details: task.details,\r\n                            });\r\n                          }}\r\n                          saveButtonLabel={<FontAwesomeIcon icon={faCheck} />}\r\n                          cancelButtonLabel={<FontAwesomeIcon icon={faTimes} />}\r\n                        />\r\n                      </span>\r\n\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          maxWidth: \"200px\",\r\n                          marginTop: \"1%\",\r\n                        }}\r\n                      >\r\n                        <p style={{ color: \"white\", marginRight: \"5px\" }}>\r\n                          {\" \"}\r\n                          Status:{\" \"}\r\n                        </p>\r\n                        <Select\r\n                          options={options}\r\n                          placeholder={task.status}\r\n                          onChange={(ev) => {\r\n                            setFormData({\r\n                              status: ev.label,\r\n                              dueDate: task.dueDate,\r\n                              taskID: task.taskID,\r\n                              nbrDeliverables: task.nbrDeliverables,\r\n                              details: task.details,\r\n                              comments: task.comments,\r\n                            });\r\n                          }}\r\n                        />\r\n                      </div>\r\n\r\n                      <div style={{ display: \"flex\" }}>\r\n                        <Button\r\n                          onClick={handleUpdate}\r\n                          disabled={!formData.taskID}\r\n                        >\r\n                          Update Task\r\n                        </Button>\r\n\r\n                        <Button2\r\n                          onClick={handleDelete}\r\n                          disabled={!checkedValue.taskID}\r\n                        >\r\n                          Delete Task\r\n                        </Button2>\r\n\r\n                        <label\r\n                          style={{\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            position: \"relative\",\r\n                            top: \"10%\",\r\n                          }}\r\n                        >\r\n                          <input\r\n                            type=\"radio\"\r\n                            value={`${task.taskID}`}\r\n                            checked={checkedValue.taskID === `${task.taskID}`}\r\n                            onChange={handleChange}\r\n                          />\r\n                          <span\r\n                            style={{\r\n                              fontSize: \"11px\",\r\n                              overflowWrap: \"break-word\",\r\n                            }}\r\n                          >\r\n                            <p style={{ width: \"70%\" }}>\r\n                              Select task to delete!\r\n                            </p>\r\n                          </span>\r\n                        </label>\r\n                      </div>\r\n                      {/* responseObj.status !== 201 ?\r\n         showMessage && <>\r\n              <h3 style={{\"marginTop\": \"10px\",\"color\":\"#D80026\",\r\n             \"fontSize\":\"15px\", \"textAlign\":\"center\"}} >{responseObj.message}</h3>\r\n            </>\r\n         :\r\n         (showMessage===false) &&  <>\r\n            <h3 style={{\"marginTop\": \"10px\",\"color\":\"#D80026\",\r\n            \"fontSize\":\"15px\", \"textAlign\":\"center\"}} >{responseObj.message}</h3>\r\n            {/* <p style={{\"marginTop\": \"10px\",\"color\":\"#D80026\",\r\n            \"fontSize\":\"15px\", \"textAlign\":\"center\"}}>\r\n                Go to <b>My Projects</b> section to see your created Projects!</p> </>*/}\r\n                    </TaskWrapper>\r\n                  );\r\n                })\r\n              ) : (\r\n                <SWrapper>\r\n                  <Spinner />\r\n                  <p>Loading...</p>\r\n                </SWrapper>\r\n              )}\r\n            </ListWrapper>\r\n          </HomeWrapper>\r\n        ) : (\r\n          //if page refreshes we use this message to indicate admin is logged out\r\n          <div\r\n            style={{\r\n              width: \"600px\",\r\n              position: \"absolute\",\r\n              top: \"50%\",\r\n              left: \"30%\",\r\n            }}\r\n          >\r\n            <Title\r\n              style={{\r\n                textAlign: \"center\",\r\n                borderRadius: \"10px\",\r\n                padding: \"10px\",\r\n                background: \"red\",\r\n              }}\r\n            >\r\n              Admin signed out, go back to login page!\r\n              <button\r\n                style={{\r\n                  border: \"none\",\r\n                  padding: \"7px\",\r\n                  borderRadius: \"10px\",\r\n                  background: \"#28B0FF\",\r\n                  color: \"white\",\r\n                }}\r\n                onClick={() => navigate(\"/adminLogin\")}\r\n              >\r\n                <b>Go to Login</b>\r\n              </button>\r\n            </Title>\r\n          </div>\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`;\r\nconst HomeWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  width: 900px;\r\n  margin: 50px;\r\n  background: rgba(221, 237, 236, 1);\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  z-index: -1;\r\n  background-image: url(${backgroundImage});\r\n  position: absolute;\r\n  min-width: 100%;\r\n  min-height: 100%;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 25px;\r\n  margin-top: 2%;\r\n  margin-left: 3%;\r\n`;\r\n\r\nconst ListWrapper = styled.ul`\r\n  list-style-type: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-weight: bold;\r\n  padding: 20px 0px 20px 20px;\r\n  width: 17rem;\r\n`;\r\n\r\nconst ListedItem = styled.li`\r\n  /*  adds space between listed items instead of using margin-top */\r\n`;\r\n\r\nconst SWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  p {\r\n    margin-top: 50px;\r\n  }\r\n`;\r\n\r\nconst TaskWrapper = styled.div`\r\n  width: 40vw;\r\n  margin-left: 3%;\r\n  margin-bottom: 20px;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background: #42c99d;\r\n  /* align-items:baseline; */\r\n  font-weight: normal;\r\n  h3 {\r\n    border-bottom: 1px solid;\r\n    margin-bottom: 5px;\r\n  }\r\n  p {\r\n    color: white;\r\n  }\r\n\r\n  .tooltip {\r\n    position: relative;\r\n    display: inline-block;\r\n  }\r\n\r\n  .tooltip .tooltiptext {\r\n    visibility: hidden;\r\n    width: 120px;\r\n    background-color: #5b9bd5;\r\n    color: #fff;\r\n    text-align: center;\r\n    border-radius: 6px;\r\n    padding: 5px 0;\r\n\r\n    /* Position the tooltip */\r\n    position: absolute;\r\n    z-index: 1;\r\n    top: -5px;\r\n    left: 105%;\r\n  }\r\n\r\n  .tooltip:hover .tooltiptext {\r\n    visibility: visible;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  border-radius: 5px;\r\n  font-size: 15px;\r\n  border: none;\r\n  background: #f16436;\r\n  padding: 10px;\r\n  width: 150px;\r\n  margin-top: 15px;\r\n  color: white;\r\n  &:hover {\r\n    color: white;\r\n    background-color: rgb(40, 176, 255);\r\n    transition: 150ms;\r\n  }\r\n  &:disabled {\r\n    cursor: not-allowed;\r\n    opacity: 0.7;\r\n  }\r\n`;\r\n\r\nconst Button2 = styled(Button)`\r\n  margin-left: 15px;\r\n`;\r\n\r\nexport default CurrentProject;\r\n"]},"metadata":{},"sourceType":"module"}