{"ast":null,"code":"var _jsxFileName = \"/Users/oliverbloj/Documents/Concordia BootCamp/36.1 WM 5.5.2022/WorkFlow_Management_APP/client/src/components/AdminNewTaskForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport backgroundImage from \"../assets/background2.png\";\nimport Sidebar from \"./Sidebar\";\nimport { DataContext } from \"./DataContext\";\nimport EasyEdit, { Types } from 'react-easy-edit';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminNewTaskForm = () => {\n  _s();\n\n  let navigate = useNavigate();\n  const {\n    projectById,\n    allUsers,\n    updateTaskStatus,\n    setUpdateTaskStatus\n  } = useContext(DataContext);\n  const [newProjectStatus, setNewProjectStatus] = useState(false);\n  const [responseObj, setResponseObj] = useState({});\n  const initialFormState = {\n    taskID: \"\",\n    assignedUsers: [],\n    taskName: \"\",\n    projectName: projectById !== null ? projectById.projectName : \"\",\n    //this is fixed and cannot be edited as we create a task inside of current Project\n    dueDate: \"yyyy-mm-dd\",\n    details: \"\",\n    nbrDeliverables: \"\",\n    status: \"\",\n    comments: \"\"\n  };\n  const [formData, setFormData] = useState(initialFormState); //Object state for storing form data from inputs\n  //setting the key and values as what is written inside inputs, keeps the keys from initialStateForm that are not used (e.g. _id, type) because we use spread operator (...)\n  // const handleChange = (value, name) =>{\n  //   setFormData({...formData, [name]: value}); \n  //  }\n  //on submit we submit the New Task data tp the server\n\n  function handleSubmit(ev) {\n    ev.preventDefault(); //prevents the page from refreshing if submit unsuccesfull\n\n    const settings = {\n      method: 'POST',\n      body: JSON.stringify(formData),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(\"/tasks/newTask\", settings).then(res => res.json()).then(response => {\n      console.log(response); //const {status, message} = response; //deconstructing response's status to know if successfull or not\n\n      setResponseObj({\n        status: response.status,\n        message: response.message\n      }); // setting the received response object in a state \n\n      setUpdateTaskStatus(!updateTaskStatus); //sets the status of update to the opposite of current value to trigger dependacy array of allTasks\n    }).catch(error => console.log(\"ERROR: \", error));\n  } //optionlist to select users for a task\n\n\n  const generateOptionsList = () => {\n    const optionsList = [];\n    allUsers.map(user => {\n      return optionsList.push({\n        label: user.firstName + \" \" + user.lastName,\n        value: user.firstName + \" \" + user.lastName\n      });\n    });\n    return optionsList;\n  }; // Drop Down Progress Menu option list\n\n\n  const options = [{\n    value: \"status\",\n    label: \"Work in progress\"\n  }, {\n    value: \"status\",\n    label: \"Submitted for review\"\n  }, {\n    value: \"status\",\n    label: \"Started\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      newProjectStatus: newProjectStatus,\n      setNewProjectStatus: setNewProjectStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(HomeWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: projectById !== null ? /*#__PURE__*/_jsxDEV(FormWrapper, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              \"marginBottom\": \"15px\",\n              \"color\": \"#F16436\"\n            },\n            children: [\"Project \", projectById.projectName, \" - New task\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              marginBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginRight: \"5px\"\n              },\n              children: \" Task Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"taskName\",\n              required: true,\n              placeholder: \"Give your task a name\",\n              onChange: ev => setFormData({ ...formData,\n                taskName: ev.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              marginBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginRight: \"5px\"\n              },\n              children: \" Due Date: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Div, {\n              children: /*#__PURE__*/_jsxDEV(EasyEdit, {\n                required: true,\n                type: Types.DATE,\n                value: formData.dueDate,\n                onSave: value => setFormData({ ...formData,\n                  dueDate: value\n                }),\n                saveButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faCheck\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 32\n                }, this),\n                cancelButtonLabel: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTimes\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 34\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              marginBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginRight: \"5px\"\n              },\n              children: \" Number of Deliverables: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"nbrDeliverables\",\n              required: true,\n              placeholder: \"Specify a number\",\n              onChange: ev => setFormData({ ...formData,\n                nbrDeliverables: ev.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              marginBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginRight: \"5px\"\n              },\n              children: \" Task Details: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"taskDetails\",\n              required: true,\n              placeholder: \"Add some details\",\n              onChange: ev => setFormData({ ...formData,\n                details: ev.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              marginBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginRight: \"5px\"\n              },\n              children: \" Comments: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              name: \"comments\",\n              placeholder: \"Optional comments\",\n              onChange: ev => setFormData({ ...formData,\n                comments: ev.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              alignItems: \"center\",\n              marginBottom: \"10px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginRight: \"5px\"\n              },\n              children: \" Assigned Users: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(Div, {\n              children: /*#__PURE__*/_jsxDEV(EasyEdit, {\n                required: true,\n                type: Types.CHECKBOX,\n                options: generateOptionsList(),\n                onSave: value => {\n                  const splittedValues = value.toString().split(\",\"); //value is an Object, we have to convert to String then split it\n\n                  const arrOfSplitted = splittedValues.map(el => {\n                    const splittedEl = el.split(\" \"); //we have to split each element [\"john doe\"] to get [\"john\", \"doe\"]\n\n                    return {\n                      firstName: splittedEl[0],\n                      lastName: splittedEl[1]\n                    };\n                  });\n                  return setFormData({ ...formData,\n                    assignedUsers: arrOfSplitted //[{firstName: splittedValue[0], lastName: splittedValue[1]}]\n\n                  });\n                },\n                value: formData.assignedUsers.length !== 0 ? formData.assignedUsers.map(usr => {\n                  return `${usr.firstName + \" \" + usr.lastName}`;\n                }) : [\"Add users to this task\"] // \n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(SubmitInput, {\n              type: \"submit\",\n              value: \"Create New Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: responseObj.status !== 201 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  \"marginTop\": \"10px\",\n                  \"color\": \"#D80026\",\n                  \"fontSize\": \"15px\",\n                  \"textAlign\": \"center\"\n                },\n                children: responseObj.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 9\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  \"marginTop\": \"10px\",\n                  \"color\": \"#D80026\",\n                  \"fontSize\": \"15px\",\n                  \"textAlign\": \"center\"\n                },\n                children: responseObj.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  \"marginTop\": \"10px\",\n                  \"color\": \"#D80026\",\n                  \"fontSize\": \"15px\",\n                  \"textAlign\": \"center\"\n                },\n                children: [\"Go back to \", /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: `/adminHome/myProjects/${projectById._id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: projectById.projectName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 14\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 24\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        //if page refreshes we use this message to indicate admin is logged out\n        _jsxDEV(\"div\", {\n          style: {\n            \"width\": \"600px\",\n            \"position\": \"absolute\",\n            \"top\": \"50%\",\n            \"left\": \"30%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Title, {\n            style: {\n              \"textAlign\": \"center\",\n              \"borderRadius\": \"10px\",\n              \"padding\": \"10px\",\n              \"background\": \"red\"\n            },\n            children: [\"Admin signed out, go back to login page!\", /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                \"border\": \"none\",\n                \"padding\": \"7px\",\n                \"borderRadius\": \"10px\",\n                \"background\": \"#28B0FF\",\n                \"color\": \"white\"\n              },\n              onClick: () => navigate(\"/adminLogin\"),\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Go to Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AdminNewTaskForm, \"5fnU3SX8AemAWtdS0Ujv7TJojmE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AdminNewTaskForm;\nconst Wrapper = styled.div`\n      margin: 25px ;\n      font-size: 16px;\n    `;\n_c2 = Wrapper;\nconst FormWrapper = styled.form`\n    border-radius: 10px; \n    display: flex;\n    flex-direction: column;\n    /* border: 4px solid #42c99d; */\n    background: #DDEDEC;\n    width: 100%;\n    height: 100%;\n    `;\n_c3 = FormWrapper;\nconst HomeWrapper = styled.div`\n      display: flex;\n      flex-direction: column;\n      align-items:flex-start;\n      width: 900px;\n      margin: 50px;\n      background: rgba(221, 237, 236, 1);\n      border-radius: 5px;\n      `;\n_c4 = HomeWrapper;\nconst Div = styled.div`\n    border: none;\n    background: #42c99d;\n    padding:5px;\n    border-radius: 10px; \n    `;\n_c5 = Div;\nconst Input = styled.input`\n    border: none;\n    background: #42c99d;\n    font-size: 16px;\n    height: 35px;\n    padding:5px;\n    border-radius: 10px; \n        `;\n_c6 = Input;\nconst SubmitInput = styled.input`\n  color: white;\n  font-weight: bold;\n  padding: 12px 35px 12px 35px;\n  margin: 10px 0px 0px -5px;\n  text-align: center;\n  border: none;\n  border-radius: 10px;\n  background:  #F16436;\n  /* &.active{\n    color: white;\n  } */\n  &:hover{\n    color: white;\n    background-color: rgb(40,176,255);\n    transition: 150ms;\n  }\n  `;\n_c7 = SubmitInput;\nconst Background = styled.div`\nz-index: -1;\nbackground-image: url(${backgroundImage});\nposition: absolute; \nmin-width: 100%;\nmin-height: 140%;\nbackground-repeat: no-repeat;\nbackground-size: cover;\nbackground-position: center;\n`;\n_c8 = Background;\nconst Title = styled.h1`\nfont-size: 25px;\nmargin-top: 2%;\nmargin-left: 3%;\n`;\n_c9 = Title;\nexport default AdminNewTaskForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"AdminNewTaskForm\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"FormWrapper\");\n$RefreshReg$(_c4, \"HomeWrapper\");\n$RefreshReg$(_c5, \"Div\");\n$RefreshReg$(_c6, \"Input\");\n$RefreshReg$(_c7, \"SubmitInput\");\n$RefreshReg$(_c8, \"Background\");\n$RefreshReg$(_c9, \"Title\");","map":{"version":3,"sources":["/Users/oliverbloj/Documents/Concordia BootCamp/36.1 WM 5.5.2022/WorkFlow_Management_APP/client/src/components/AdminNewTaskForm.js"],"names":["React","useState","useContext","styled","backgroundImage","Sidebar","DataContext","EasyEdit","Types","FontAwesomeIcon","faCheck","faTimes","NavLink","useNavigate","AdminNewTaskForm","navigate","projectById","allUsers","updateTaskStatus","setUpdateTaskStatus","newProjectStatus","setNewProjectStatus","responseObj","setResponseObj","initialFormState","taskID","assignedUsers","taskName","projectName","dueDate","details","nbrDeliverables","status","comments","formData","setFormData","handleSubmit","ev","preventDefault","settings","method","body","JSON","stringify","headers","Accept","fetch","then","res","json","response","console","log","message","catch","error","generateOptionsList","optionsList","map","user","push","label","firstName","lastName","value","options","display","alignItems","marginBottom","marginRight","target","DATE","CHECKBOX","splittedValues","toString","split","arrOfSplitted","el","splittedEl","length","usr","_id","Wrapper","div","FormWrapper","form","HomeWrapper","Div","Input","input","SubmitInput","Background","Title","h1"],"mappings":"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RI;MAAMD,W;AASJ,MAAME,WAAW,GAAGnF,MAAM,CAACgF,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OARM;MAAMG,W;AAUR,MAAMC,GAAG,GAAEpF,MAAM,CAACgF,GAAI;AAC1B;AACA;AACA;AACA;AACA,KALI;MAAMI,G;AAON,MAAMC,KAAK,GAAErF,MAAM,CAACsF,KAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,SAPI;MAAMD,K;AASR,MAAME,WAAW,GAAGvF,MAAM,CAACsF,KAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAjBE;MAAMC,W;AAoBR,MAAMC,UAAU,GAAGxF,MAAM,CAACgF,GAAI;AAC9B;AACA,wBAAwB/E,eAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMuF,U;AAWN,MAAMC,KAAK,GAAGzF,MAAM,CAAC0F,EAAG;AACxB;AACA;AACA;AACA,CAJA;MAAMD,K;AAOJ,eAAe9E,gBAAf","sourcesContent":["import React, {useState, useContext} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport backgroundImage from \"../assets/background2.png\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { DataContext } from \"./DataContext\";\r\nimport EasyEdit, {Types} from 'react-easy-edit';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\n\r\nconst AdminNewTaskForm= () =>{\r\n  let navigate = useNavigate();\r\nconst {projectById,allUsers, updateTaskStatus, \r\n      setUpdateTaskStatus} = useContext(DataContext);\r\n\r\nconst [newProjectStatus, setNewProjectStatus] = useState(false);\r\nconst [responseObj, setResponseObj] = useState({});\r\n\r\nconst initialFormState = {\r\n    taskID:\"\",\r\n    assignedUsers:[],\r\n    taskName: \"\",\r\n    projectName: projectById !== null ? projectById.projectName : \"\", //this is fixed and cannot be edited as we create a task inside of current Project\r\n    dueDate: \"yyyy-mm-dd\",\r\n    details: \"\",\r\n    nbrDeliverables: \"\",\r\n    status: \"\",\r\n    comments: \"\" };\r\n\r\nconst [formData, setFormData] = useState(initialFormState);//Object state for storing form data from inputs\r\n\r\n//setting the key and values as what is written inside inputs, keeps the keys from initialStateForm that are not used (e.g. _id, type) because we use spread operator (...)\r\n// const handleChange = (value, name) =>{\r\n//   setFormData({...formData, [name]: value}); \r\n//  }\r\n\r\n//on submit we submit the New Task data tp the server\r\nfunction handleSubmit(ev){\r\n  ev.preventDefault();//prevents the page from refreshing if submit unsuccesfull\r\n  const settings = {\r\n    method: 'POST',\r\n    body: JSON.stringify(formData),\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }}\r\nfetch(\"/tasks/newTask\", settings)\r\n.then((res)=>res.json())\r\n.then((response)=>{\r\nconsole.log(response)\r\n//const {status, message} = response; //deconstructing response's status to know if successfull or not\r\nsetResponseObj({status: response.status, message: response.message}); // setting the received response object in a state \r\nsetUpdateTaskStatus(!updateTaskStatus); //sets the status of update to the opposite of current value to trigger dependacy array of allTasks\r\n})\r\n.catch((error) => console.log(\"ERROR: \", error)); \r\n\r\n}\r\n\r\n//optionlist to select users for a task\r\nconst generateOptionsList = () => {\r\n  const optionsList =[];\r\n      allUsers.map((user)=>{\r\n        return optionsList.push({ label: user.firstName + \" \" + user.lastName,\r\n         value: user.firstName + \" \" + user.lastName})\r\n      })\r\n      return optionsList;\r\n    };\r\n\r\n    \r\n  // Drop Down Progress Menu option list\r\n  const options = [\r\n    { value: \"status\", label: \"Work in progress\" },\r\n    { value: \"status\", label: \"Submitted for review\" },\r\n    { value: \"status\", label: \"Started\" },\r\n  ];\r\n  \r\n    return (\r\n        <div style={{display: \"flex\"}}>\r\n          <Background />         \r\n          <Sidebar newProjectStatus={newProjectStatus} setNewProjectStatus={setNewProjectStatus}/>\r\n          <HomeWrapper>\r\n          <Wrapper>\r\n          {projectById !==null ? (\r\n            <FormWrapper onSubmit={handleSubmit}>\r\n              <h2 style={{\"marginBottom\": \"15px\",\"color\":\"#F16436\"}}>\r\n                Project {projectById.projectName} - New task</h2>\r\n\r\n          <div style={{display: \"flex\", alignItems:\"center\", marginBottom:\"10px\"}}>\r\n          <p style={{ marginRight: \"5px\"}}> Task Name: </p>\r\n          <Input type={\"text\"} \r\n              name=\"taskName\" \r\n              required \r\n              placeholder=\"Give your task a name\"\r\n              onChange={(ev)=> setFormData({...formData, taskName:ev.target.value })} /> \r\n        </div>\r\n\r\n          <span style={{ display:\"flex\", alignItems:\"center\", marginBottom:\"10px\"}}>\r\n            <p style={{ marginRight: \"5px\"}}> Due Date: </p>\r\n             <Div>\r\n              <EasyEdit\r\n              required\r\n              type={Types.DATE}\r\n              value={formData.dueDate}\r\n              onSave={(value) =>  setFormData({...formData, dueDate: value})}\r\n              saveButtonLabel={<FontAwesomeIcon icon={faCheck} />}\r\n              cancelButtonLabel={<FontAwesomeIcon icon={faTimes} />} />\r\n            </Div>\r\n          </span>\r\n\r\n          <div style={{display: \"flex\", alignItems:\"center\", marginBottom:\"10px\"}}>\r\n          <p style={{ marginRight: \"5px\"}}> Number of Deliverables: </p>\r\n          <Input type={\"text\"} \r\n              name=\"nbrDeliverables\" \r\n              required \r\n              placeholder=\"Specify a number\"\r\n              onChange={(ev)=> setFormData({...formData, nbrDeliverables:ev.target.value })} /> \r\n        </div>\r\n        \r\n        <div style={{display: \"flex\", alignItems:\"center\", marginBottom:\"10px\"}}>\r\n          <p style={{ marginRight: \"5px\"}}> Task Details: </p>\r\n          <Input type={\"text\"} \r\n              name=\"taskDetails\" \r\n              required \r\n              placeholder=\"Add some details\"\r\n              onChange={(ev)=> setFormData({...formData, details: ev.target.value })} /> \r\n        </div>\r\n        \r\n        <div style={{display: \"flex\", alignItems:\"center\", marginBottom:\"10px\"}}>\r\n          <p style={{ marginRight: \"5px\"}}> Comments: </p>\r\n          <Input type={\"text\"} \r\n              name=\"comments\" \r\n              placeholder=\"Optional comments\"\r\n              onChange={(ev)=> setFormData({...formData, comments:ev.target.value })} /> \r\n        </div>\r\n\r\n        <div style={{ display: \"flex\", alignItems:\"center\", marginBottom:\"10px\"}}>\r\n                       <p style={{marginRight: \"5px\"}}> Assigned Users: </p>\r\n                       <Div>\r\n                       <EasyEdit\r\n                       required\r\n                        type={Types.CHECKBOX}\r\n                        options={generateOptionsList()}\r\n                        onSave={(value) => {\r\n                          const splittedValues = value.toString().split(\",\");//value is an Object, we have to convert to String then split it\r\n                          const arrOfSplitted = splittedValues.map((el)=>{\r\n                            const splittedEl = el.split(\" \")//we have to split each element [\"john doe\"] to get [\"john\", \"doe\"]\r\n                            return {firstName: splittedEl[0], lastName: splittedEl[1]}\r\n                          });\r\n                          return (\r\n                          setFormData({ ...formData, assignedUsers: arrOfSplitted//[{firstName: splittedValue[0], lastName: splittedValue[1]}]\r\n                                      }))\r\n                          }}\r\n                         value={formData.assignedUsers.length !== 0 ?\r\n                          formData.assignedUsers.map((usr)=>{\r\n                            return(`${usr.firstName + \" \" + usr.lastName}`)\r\n                          })  : [\"Add users to this task\"]} // \r\n                        />\r\n                        </Div>\r\n         </div>\r\n\r\n        <div>\r\n        <SubmitInput type=\"submit\" value=\"Create New Task\"/>\r\n        </div>\r\n    <div>\r\n        {responseObj.status !== 201 ? \r\n        ( <>\r\n        <h3 style={{\"marginTop\": \"10px\",\"color\":\"#D80026\", \r\n        \"fontSize\":\"15px\", \"textAlign\":\"center\"}} >{responseObj.message}</h3>\r\n        </>\r\n        ) : (\r\n            <>\r\n            <h3 style={{\"marginTop\": \"10px\",\"color\":\"#D80026\", \r\n            \"fontSize\":\"15px\", \"textAlign\":\"center\"}} >{responseObj.message}</h3>\r\n            <p style={{\"marginTop\": \"10px\",\"color\":\"#D80026\", \r\n            \"fontSize\":\"15px\", \"textAlign\":\"center\"}}>\r\n            Go back to <NavLink to={`/adminHome/myProjects/${projectById._id}`}>\r\n             <b>{projectById.projectName}</b> \r\n            </NavLink>\r\n            </p>\r\n            </>\r\n        )\r\n        }\r\n    </div>\r\n            </FormWrapper>\r\n          ):(\r\n            //if page refreshes we use this message to indicate admin is logged out\r\n          <div style ={{\"width\" : \"600px\", \"position\" : \"absolute\", \"top\" :\"50%\" , \"left\" :\"30%\" }}>\r\n          <Title style={{\"textAlign\":\"center\", \"borderRadius\" :\"10px\", \"padding\":\"10px\",\r\n          \"background\" :\"red\", \r\n          }}>Admin signed out, go back to login page!\r\n          <button \r\n          style ={{\"border\" : \"none\", \"padding\":\"7px\", \"borderRadius\": \"10px\", \"background\":\"#28B0FF\", \"color\":\"white\"}}\r\n          onClick={()=> navigate(\"/adminLogin\")}><b>Go to Login</b></button></Title>\r\n          </div>\r\n          )\r\n          \r\n          }\r\n        </Wrapper>\r\n        </HomeWrapper>\r\n    </div>\r\n\r\n    );\r\n  }\r\n\r\n  const Wrapper = styled.div`\r\n      margin: 25px ;\r\n      font-size: 16px;\r\n    `\r\n    \r\n    const FormWrapper = styled.form`\r\n    border-radius: 10px; \r\n    display: flex;\r\n    flex-direction: column;\r\n    /* border: 4px solid #42c99d; */\r\n    background: #DDEDEC;\r\n    width: 100%;\r\n    height: 100%;\r\n    `\r\n      const HomeWrapper = styled.div`\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items:flex-start;\r\n      width: 900px;\r\n      margin: 50px;\r\n      background: rgba(221, 237, 236, 1);\r\n      border-radius: 5px;\r\n      `\r\n    \r\n    const Div= styled.div`\r\n    border: none;\r\n    background: #42c99d;\r\n    padding:5px;\r\n    border-radius: 10px; \r\n    `\r\n        \r\n    const Input= styled.input`\r\n    border: none;\r\n    background: #42c99d;\r\n    font-size: 16px;\r\n    height: 35px;\r\n    padding:5px;\r\n    border-radius: 10px; \r\n        `\r\n    \r\n  const SubmitInput = styled.input`\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 12px 35px 12px 35px;\r\n  margin: 10px 0px 0px -5px;\r\n  text-align: center;\r\n  border: none;\r\n  border-radius: 10px;\r\n  background:  #F16436;\r\n  /* &.active{\r\n    color: white;\r\n  } */\r\n  &:hover{\r\n    color: white;\r\n    background-color: rgb(40,176,255);\r\n    transition: 150ms;\r\n  }\r\n  `\r\n\r\n\r\nconst Background = styled.div`\r\nz-index: -1;\r\nbackground-image: url(${backgroundImage});\r\nposition: absolute; \r\nmin-width: 100%;\r\nmin-height: 140%;\r\nbackground-repeat: no-repeat;\r\nbackground-size: cover;\r\nbackground-position: center;\r\n`\r\n\r\nconst Title = styled.h1`\r\nfont-size: 25px;\r\nmargin-top: 2%;\r\nmargin-left: 3%;\r\n`\r\n\r\n\r\n  export default AdminNewTaskForm;"]},"metadata":{},"sourceType":"module"}