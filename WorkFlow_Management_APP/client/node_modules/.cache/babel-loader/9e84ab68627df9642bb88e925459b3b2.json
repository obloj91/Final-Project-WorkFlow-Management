{"ast":null,"code":"var _jsxFileName = \"/Users/oliverbloj/Documents/Concordia BootCamp/36.1 WM 5.5.2022/WorkFlow_Management_APP/client/src/components/AdminNewProjectForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { DataContext } from \"./DataContext\";\nimport Tooltip from '@mui/material/Tooltip';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminNewProjectForm = () => {\n  _s();\n\n  //const {resStatus, setResStatus} = useState(\"idle\");\n  const [responseObj, setResponseObj] = useState({});\n  const [projectDate, setProjectDate] = useState(new Date());\n  const initialFormState = {\n    projectName: \"\",\n    projectType: \"\",\n    projectDeadline: projectDate\n  };\n  const [formData, setFormData] = useState(initialFormState); //Object state for storing form data from inputs\n  //const [errMessage, setErrMessage] = useState(\"\");//state used to store error message\n  //setting the key and values as what is written inside inputs, keeps the keys from initialStateForm that are not used (e.g. _id, type)\n\n  const handleChange = (value, name) => {\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }; //on submit we \n\n\n  function handleSubmit(ev) {\n    ev.preventDefault(); //prevents the page from refreshing if submit unsuccesfull\n\n    const settings = {\n      method: 'POST',\n      body: JSON.stringify(formData),\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      }\n    };\n    fetch(\"/projects/newProject\", settings).then(res => res.json()).then(response => {\n      console.log(response); //const {status, message} = response; //deconstructing response's status to know if succefull or not\n\n      setResponseObj({\n        status: response.status,\n        message: response.message\n      }); // setting the received response object in a state \n      // if(status===201){\n      // //setResStatus(\"success\");//set the status meaning POST was succesfull\n      // setResMessage(response);\n      // }\n      // else {\n      // //setResStatus(\"failed\");//set the status meaning POST was not successfull\n      // setResMessage(response);// setting the received message from server into our response message state\n      // }\n    }).catch(error => console.log(\"ERROR: \", error));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(FormWrapper, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            \"marginBottom\": \"15px\",\n            \"color\": \"grey\"\n          },\n          children: \"Create a New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Give your project a cool name!\",\n          placement: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"projectName\",\n            required: true,\n            placeholder: \"Project Name\",\n            onChange: ev => handleChange(ev.target.value, \"projectName\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"What type of project is it? (e.g. costs, statistics, analysis)\",\n          placement: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"projectType\",\n            required: true,\n            placeholder: \"Project Type\",\n            onChange: ev => handleChange(ev.target.value, \"projectType\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(DateDiv, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              \"marginBottom\": \"2px\",\n              \"color\": \"#808080\"\n            },\n            children: \"Select Project Deadline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: projectDate,\n            dateFormat: \"yyyy/MM/dd\",\n            onChange: date => setProjectDate(date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SubmitInput, {\n          type: \"submit\",\n          value: \"Create New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: responseObj.status !== 201 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                \"marginTop\": \"10px\",\n                \"color\": \"#D80026\",\n                \"fontSize\": \"15px\",\n                \"textAlign\": \"center\"\n              },\n              children: responseObj.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 9\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                \"marginTop\": \"10px\",\n                \"color\": \"#D80026\",\n                \"fontSize\": \"15px\",\n                \"textAlign\": \"center\"\n              },\n              children: responseObj.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                \"marginTop\": \"10px\",\n                \"color\": \"#D80026\",\n                \"fontSize\": \"15px\",\n                \"textAlign\": \"center\"\n              },\n              children: [\"Go to \", /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"My Projects\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, this), \" section to see your created Projects!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(AdminNewProjectForm, \"oMCvm5a7mEDZywghuM4/AaULU5Y=\");\n\n_c = AdminNewProjectForm;\nconst Wrapper = styled.div`\n       display: flex;\n      justify-content: center;\n      align-items: center;\n      margin: 25px ;\n    `;\n_c2 = Wrapper;\nconst FormWrapper = styled.form`\n    border-radius: 10px; \n    display: flex;\n    flex-direction: column;\n    /* border: 4px solid #42c99d; */\n    background: #DDEDEC;\n    width: 350px;\n    height: 450px;\n    `;\n_c3 = FormWrapper;\nconst Input = styled.input`\n    border: none;\n    background: #42c99d;\n    font-size: 16px;\n    height: 35px;\n    margin: 0px 0px 20px 0px;\n    padding:15px;\n    border-radius: 10px; \n    `;\n_c4 = Input;\nconst SubmitInput = styled.input`\n  color: white;\n  font-weight: bold;\n  padding: 12px 35px 12px 35px;\n  margin-bottom: 10px;\n  text-align: center;\n  border: none;\n  border-radius: 10px;\n  background: #42c99d;\n  /* &.active{\n    color: white;\n  } */\n  &:hover{\n    color: white;\n    background-color: rgb(40,176,255);\n    transition: 150ms;\n  }\n  `;\n_c5 = SubmitInput;\nconst DateDiv = styled.div`\n    display: flex;\n    flex-direction: column;\n\n   border: none;\n    background: #42c99d;\n    font-size: 16px;\n    height: 35px;\n    margin: 0px 0px 20px 0px;\n    padding: 10px 28px 50px 28px;\n    border-radius: 10px; \n\n`;\n_c6 = DateDiv;\nexport default AdminNewProjectForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"AdminNewProjectForm\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"FormWrapper\");\n$RefreshReg$(_c4, \"Input\");\n$RefreshReg$(_c5, \"SubmitInput\");\n$RefreshReg$(_c6, \"DateDiv\");","map":{"version":3,"sources":["/Users/oliverbloj/Documents/Concordia BootCamp/36.1 WM 5.5.2022/WorkFlow_Management_APP/client/src/components/AdminNewProjectForm.js"],"names":["React","useContext","useState","styled","DataContext","Tooltip","DatePicker","AdminNewProjectForm","responseObj","setResponseObj","projectDate","setProjectDate","Date","initialFormState","projectName","projectType","projectDeadline","formData","setFormData","handleChange","value","name","handleSubmit","ev","preventDefault","settings","method","body","JSON","stringify","headers","Accept","fetch","then","res","json","response","console","log","status","message","catch","error","target","date","Wrapper","div","FormWrapper","form","Input","input","SubmitInput","DateDiv"],"mappings":"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","sourcesContent":["import React, {useContext, useState} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { DataContext } from \"./DataContext\";\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst AdminNewProjectForm= () =>{\r\n//const {resStatus, setResStatus} = useState(\"idle\");\r\nconst [responseObj, setResponseObj] = useState({});\r\nconst [projectDate, setProjectDate] = useState(new Date());\r\n\r\nconst initialFormState = {\r\n    projectName: \"\",\r\n    projectType: \"\",\r\n    projectDeadline:projectDate };\r\n\r\nconst [formData, setFormData] = useState(initialFormState);//Object state for storing form data from inputs\r\n//const [errMessage, setErrMessage] = useState(\"\");//state used to store error message\r\n\r\n//setting the key and values as what is written inside inputs, keeps the keys from initialStateForm that are not used (e.g. _id, type)\r\nconst handleChange = (value, name) =>{\r\n  setFormData({...formData, [name]: value}); \r\n }\r\n\r\n//on submit we \r\nfunction handleSubmit(ev){\r\n  ev.preventDefault();//prevents the page from refreshing if submit unsuccesfull\r\n  const settings = {\r\n    method: 'POST',\r\n    body: JSON.stringify(formData),\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n    }\r\n\r\n}\r\nfetch(\"/projects/newProject\", settings)\r\n.then((res)=>res.json())\r\n.then((response)=>{\r\nconsole.log(response)\r\n//const {status, message} = response; //deconstructing response's status to know if succefull or not\r\nsetResponseObj({status: response.status, message: response.message}); // setting the received response object in a state \r\n// if(status===201){\r\n// //setResStatus(\"success\");//set the status meaning POST was succesfull\r\n// setResMessage(response);\r\n// }\r\n// else {\r\n// //setResStatus(\"failed\");//set the status meaning POST was not successfull\r\n// setResMessage(response);// setting the received message from server into our response message state\r\n// }\r\n})\r\n.catch((error) => console.log(\"ERROR: \", error)); \r\n\r\n}\r\n\r\n\r\n    return (\r\n        <>         \r\n          <Wrapper>\r\n            <FormWrapper onSubmit={handleSubmit}>\r\n              <h2 style={{\"marginBottom\": \"15px\",\"color\":\"grey\"}}>Create a New Project</h2>\r\n              <Tooltip title=\"Give your project a cool name!\" placement=\"right\">\r\n              <Input type={\"text\"} \r\n              name=\"projectName\" \r\n              required \r\n              placeholder=\"Project Name\" \r\n              onChange={(ev)=> handleChange(ev.target.value, \"projectName\")}/>\r\n              </Tooltip>\r\n  <Tooltip title=\"What type of project is it? (e.g. costs, statistics, analysis)\" placement=\"right\">\r\n              <Input type={\"text\"} \r\n              name=\"projectType\" \r\n              required \r\n              placeholder=\"Project Type\"\r\n              onChange={(ev)=> handleChange(ev.target.value, \"projectType\")} /> \r\n</Tooltip>\r\n              <DateDiv>\r\n               <p style={{\"marginBottom\": \"2px\", \"color\" :\"#808080\"}}>Select Project Deadline</p>\r\n              <DatePicker selected={projectDate}\r\n              dateFormat=\"yyyy/MM/dd\"\r\n              onChange={(date) => setProjectDate(date)}/>\r\n              </DateDiv>\r\n            \r\n\r\n\r\n        <SubmitInput type=\"submit\" value=\"Create New Project\"/>\r\n    <div>\r\n        {responseObj.status !== 201 ? \r\n        ( <>\r\n        <h3 style={{\"marginTop\": \"10px\",\"color\":\"#D80026\", \r\n        \"fontSize\":\"15px\", \"textAlign\":\"center\"}} >{responseObj.message}</h3>\r\n        </>\r\n        ) : (\r\n            <>\r\n            <h3 style={{\"marginTop\": \"10px\",\"color\":\"#D80026\", \r\n            \"fontSize\":\"15px\", \"textAlign\":\"center\"}} >{responseObj.message}</h3>\r\n            <p style={{\"marginTop\": \"10px\",\"color\":\"#D80026\", \r\n            \"fontSize\":\"15px\", \"textAlign\":\"center\"}}>\r\n                Go to <b>My Projects</b> section to see your created Projects!</p>\r\n            </>\r\n        )\r\n        }\r\n    </div>\r\n            </FormWrapper>\r\n        </Wrapper>\r\n    </>\r\n\r\n    \r\n\r\n    );\r\n  }\r\n\r\n  const Wrapper = styled.div`\r\n       display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      margin: 25px ;\r\n    `\r\n    \r\n    const FormWrapper = styled.form`\r\n    border-radius: 10px; \r\n    display: flex;\r\n    flex-direction: column;\r\n    /* border: 4px solid #42c99d; */\r\n    background: #DDEDEC;\r\n    width: 350px;\r\n    height: 450px;\r\n    `\r\n    \r\n    const Input= styled.input`\r\n    border: none;\r\n    background: #42c99d;\r\n    font-size: 16px;\r\n    height: 35px;\r\n    margin: 0px 0px 20px 0px;\r\n    padding:15px;\r\n    border-radius: 10px; \r\n    `\r\n    \r\n  const SubmitInput = styled.input`\r\n  color: white;\r\n  font-weight: bold;\r\n  padding: 12px 35px 12px 35px;\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  border: none;\r\n  border-radius: 10px;\r\n  background: #42c99d;\r\n  /* &.active{\r\n    color: white;\r\n  } */\r\n  &:hover{\r\n    color: white;\r\n    background-color: rgb(40,176,255);\r\n    transition: 150ms;\r\n  }\r\n  `\r\n\r\nconst DateDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n   border: none;\r\n    background: #42c99d;\r\n    font-size: 16px;\r\n    height: 35px;\r\n    margin: 0px 0px 20px 0px;\r\n    padding: 10px 28px 50px 28px;\r\n    border-radius: 10px; \r\n\r\n`\r\n\r\n\r\n\r\n  export default AdminNewProjectForm;"]},"metadata":{},"sourceType":"module"}